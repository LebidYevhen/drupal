<?php

namespace Drupal\yl_simple_form\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;

/**
 * Simple Form.
 */
class SimpleForm extends FormBase {

  /**
   * {@inheritdoc}
   */
  public function getFormId() {

    return 'yl_simple_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $form['user_name'] = [
      '#type' => 'textfield',
      '#title' => $this->t('User Name:'),
      '#required' => TRUE,
    ];

    $form['email'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Email:'),
      '#required' => TRUE,
    ];

    $form['submit'] = [
      '#type' => 'submit',
      '#value' => $this->t('Submit'),
    ];
    return $form;
  }

  /**
   * {@inheritdoc}
   */
  public function validateForm(array &$form, FormStateInterface $form_state) {
    $value = $form_state->getValue('email');

    if ($value == !$this->service('email.validator')->isValid($value)) {
      $form_state->setErrorByName(
        'email',
        $this->t('The email address %mail is not valid.', ['%mail' => $value])
      );
    }
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $userName = $form_state->getValue('user_name');
    $email = $form_state->getValue('email');
    $message = "User Name: $userName, Email: $email";

    $this->logger('yl_simple_form')->info($message);
  }

  /**
   * Logger.
   */
  protected function logger($channel) {
    // @todo Change the autogenerated stub.
    return parent::logger($channel);
  }

  /**
   * Service.
   */
  public static function service($id) {
    return static::getContainer()->get($id);
  }

}
